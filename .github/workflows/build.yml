name: build
on: [ push, pull_request ]
jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [ clang, gcc, gcc-10 ]
        glib: [ enable, disable ]
        odbc: [ iodbc, unixodbc ]
    steps:
      - name: Install packages
        run: sudo apt install libglib2.0-dev libiodbc2-dev unixodbc-dev gawk gcc-10
      - uses: actions/checkout@v2
      - name: Fetch test data
        run: git clone https://github.com/mdbtools/mdbtestdata.git test
      - name: Autoconf
        run: autoreconf -i -f
      - name: Configure
        run: ./configure --disable-silent-rules --${{ matrix.glib }}-glib --with-${{ odbc }}=/usr
        env:
          CC: ${{ matrix.compiler }}
      - name: Make
        run: make
      - name: ODBC tests
        run: env MDBPATH=test/data ./src/odbc/unittest
      - name: pkg-config libmdb test
        run: env PKG_CONFIG_PATH=. pkg-config libmdb --exists
      - name: pkg-config libmdbsql test
        run: env PKG_CONFIG_PATH=. pkg-config libmdbsql --exists
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        compiler: [ clang, gcc ]
        glib: [ enable, disable ]
        odbc: [ iodbc, unixodbc ]
    steps:
      - name: Install packages
        run: brew install libiodbc unixodbc glib bison gawk pkg-config
      - uses: actions/checkout@v2
      - name: Fetch test data
        run: git clone https://github.com/mdbtools/mdbtestdata.git test
      - name: Autoconf
        run: autoreconf -i -f
      - name: Configure
        run: ./configure --disable-silent-rules --${{ matrix.glib }}-glib --with-${{ odbc }}=/usr/local/opt
        env:
          CC: ${{ matrix.compiler }}
          YACC: /usr/local/opt/bison/bin/bison
      - name: Make
        run: make
      - name: ODBC tests
        run: env MDBPATH=test/data ./src/odbc/unittest
      - name: pkg-config libmdb test
        run: env PKG_CONFIG_PATH=. pkg-config libmdb --exists
      - name: pkg-config libmdbsql test
        run: env PKG_CONFIG_PATH=. pkg-config libmdbsql --exists
